#pragma target 4.5

struct ps_input
{
	float4 pos : SV_POSITION;
	#if USE_FLIPBOOK_INTERPOLATION
	float4 uv : TEXCOORD0;
	#else
	float2 uv : TEXCOORD0;	
	#endif
	#if USE_ALPHA_TEST || USE_FLIPBOOK_INTERPOLATION || VFX_USE_ALPHA_CURRENT
	// x: alpha threshold
	// y: frame blending factor
	// z: alpha
	VFX_OPTIONAL_INTERPOLATION float3 builtInInterpolants : TEXCOORD1;
	#endif
	
	#if USE_FLIPBOOK_MOTIONVECTORS
	// x: motion vectors scale X
	// y: motion vectors scale Y
	VFX_OPTIONAL_INTERPOLATION float2 builtInInterpolants2 : TEXCOORD2;
	#endif
	
	#if VFX_PASSDEPTH == VFX_PASSDEPTH_MOTION_VECTOR
	float4 cPosPrevious : TEXCOORD3;
	float4 cPosNonJiterred : TEXCOORD4;
	#endif
    
    #if VFX_NEEDS_POSWS_INTERPOLATOR
    float3 posWS : TEXCOORD5;
    #endif
    ${VFXAdditionalInterpolantsDeclaration}
	
	UNITY_VERTEX_OUTPUT_STEREO
};

#define VFX_VARYING_PS_INPUTS ps_input
#define VFX_VARYING_POSCS pos
#define VFX_VARYING_ALPHA builtInInterpolants.z
#define VFX_VARYING_ALPHATHRESHOLD builtInInterpolants.x
#define VFX_VARYING_FRAMEBLEND builtInInterpolants.y
#define VFX_VARYING_MOTIONVECTORSCALE builtInInterpolants2.xy
#define VFX_VARYING_UV uv

#if VFX_NEEDS_POSWS_INTERPOLATOR
#define VFX_VARYING_POSWS posWS
#endif

#if VFX_PASSDEPTH == VFX_PASSDEPTH_MOTION_VECTOR
#define VFX_VARYING_VELOCITY_CPOS cPosNonJiterred
#define VFX_VARYING_VELOCITY_CPOS_PREVIOUS cPosPrevious
#endif

#if VFX_PASSDEPTH == VFX_PASSDEPTH_MOTION_VECTOR
${VFXPassVelocityDefine}
#else
${VFXPassDepthDefine}
#endif
${VFXInclude("Shaders/ParticlePlanarPrimitives/Pass.template")}

#if VFX_PASSDEPTH == VFX_PASSDEPTH_SELECTION
int _ObjectId;
int _PassValue;
#endif

${SHADERGRAPH_PIXEL_CODE_DEPTHONLY}

#pragma fragment frag
float4 frag(ps_input i) : SV_TARGET
{
	UNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX(i);
	VFXTransformPSInputs(i);
    #ifdef VFX_SHADERGRAPH
        ${VFXAdditionalInterpolantsPreparation}
        
        ${SHADERGRAPH_PIXEL_CALL_DEPTHONLY}
        
        float alpha = OUTSG.${SHADERGRAPH_PARAM_ALPHA};
    #else
        float alpha = VFXGetFragmentColor(i).a;
        alpha *= VFXGetTextureColor(VFX_SAMPLER(mainTexture),i).a;
    #endif
	VFXClipFragmentColor(alpha,i);
	
	#if VFX_PASSDEPTH == VFX_PASSDEPTH_MOTION_VECTOR
		${VFXComputeOutputMotionVector}
		return encodedMotionVector;
	#elif VFX_PASSDEPTH == VFX_PASSDEPTH_SELECTION
		return float4(_ObjectId, _PassValue, 1.0, 1.0);
	#elif VFX_PASSDEPTH == VFX_PASSDEPTH_ACTUAL
		return (float4)0;
	#else
		#error VFX_PASSDEPTH undefined 
	#endif
}

